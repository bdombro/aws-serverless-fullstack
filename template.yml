---
AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Serverless NodeJS Application/API powered by API Gateway and Lambda

Parameters:
  DbName:
    Type: String
    Default: public
  DbUser:
    Type: String
    Default: admin
  DbPassword:
    NoEcho: true
    Type: String
    Default: supercrazysecretpassword

Resources:
  #################
  # DB
  #################
  DbCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DatabaseName: !Ref DbName
      MasterUsername: !Ref DbUser
      MasterUserPassword: !Ref DbPassword
      Engine: aurora-mysql
      EngineMode: serverless
      EngineVersion: 5.7.mysql_aurora.2.09.2 # find more with aws rds describe-db-engine-versions --engine aurora-mysql --query "DBEngineVersions[].EngineVersion"
      EnableHttpEndpoint: true
      ScalingConfiguration:
        AutoPause: true
        MaxCapacity: 4
        MinCapacity: 2
        SecondsUntilAutoPause: 300
  DbSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub ${AWS::StackName}-DbSecret
      Description: This contains the RDS Master user credentials for RDS Aurora Serverless Cluster
      SecretString: 
        !Sub |
          {
            "username": "${DbUser}",
            "password": "${DbPassword}"
          }
  LambdaRole: 
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: [sts:AssumeRole]
      Path: "/"
      Policies: 
        - PolicyName: LambdaToCloudWatchLogs
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: [logs:*]
                Resource: [arn:aws:logs:*:*:*]
        - PolicyName: LambdaToRDSAuroraServerless
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: 
                  - rds-data:ExecuteSql
                  - rds-data:ExecuteStatement
                  - rds-data:BatchExecuteStatement
                  - rds-data:BeginTransaction
                  - rds-data:RollbackTransaction
                  - rds-data:CommitTransaction
                Resource: 
                  - !Sub arn:aws:rds:*:*:cluster:${DbCluster}
                  - !Sub arn:aws:rds:*:*:cluster:${DbCluster}:*
        - PolicyName: LambdaToAWSSecrets
          PolicyDocument: 
            Version: 2012-10-17
            Statement: 
              - Effect: Allow
                Action: secretsmanager:GetSecretValue
                Resource:
                  - !Ref DbSecret
                  - !Sub ${DbSecret}:*

  #############
  # API
  #############
  ApiGateway:
    Type: AWS::Serverless::HttpApi
  ApiLambda:
    Type: AWS::Serverless::Function
    Properties:
      # CodeUri: ./dist
      # Handler: main.handler
      Handler: src/lambda.handler
      MemorySize: 128
      Runtime: nodejs14.x
      Timeout: 300
      Events:
        ProxyApiRoot:
          Type: HttpApi
          Properties:
            ApiId: !Ref ApiGateway
      Environment:
        Variables:
          dbName: !Ref DbName
          dbArn: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${DbCluster}
          dbSecretArn: !Ref DbSecret
      Role: 
        Fn::GetAtt: [LambdaRole, Arn]

Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/lambda/home?region=${AWS::Region}#/functions/${ApiLambda}

  ApiGatewayApiConsoleUrl:
    Description: Console URL for the API Gateway API's Stage.
    Value: !Sub https://${AWS::Region}.console.aws.amazon.com/apigateway/home?region=${AWS::Region}#/apis/${ApiGateway}/stages/prod

  ApiUrl:
    Description: Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/

  LambdaFunctionName:
    Description: Name of the Api Lambda Function
    Value: !Ref ApiLambda

  DatabaseName:
    Value: !Ref DbName
    Description: Aurora Serverless MySQL Database
  SecretsArn:
    Value: !Ref DbSecret
    Description: AWS Secrets Arn 
  DBClusterArn:
    Value: !Sub arn:aws:rds:${AWS::Region}:${AWS::AccountId}:cluster:${DbCluster}
    Description: AWS Secrets Arn